<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.system.mapper.LogRecordMapper">
  <resultMap id="BaseResultMap" type="com.system.domain.LogRecord">
    <id column="log_id" jdbcType="INTEGER" property="logId" />
    <result column="admin_id" jdbcType="INTEGER" property="adminId" />
    <result column="admin_name" jdbcType="VARCHAR" property="adminName" />
    <result column="admin_phone" jdbcType="VARCHAR" property="adminPhone" />
    <result column="log_time" jdbcType="TIMESTAMP" property="logTime" />
  </resultMap>
  <sql id="Base_Column_List">
    log_id, admin_id, admin_name, admin_phone, log_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from log_record
    where log_id = #{logId,jdbcType=INTEGER}
  </select>
  <select id="getList" resultMap="BaseResultMap">
    select *
    from log_record
  </select>
  <select id="searchList" parameterType="java.lang.String" resultMap="BaseResultMap">
    select *
    from log_record
    where admin_id = #{searchtext}
    or admin_name like concat ('%',#{searchtext},'%')
    or admin_phone like concat ('%',#{searchtext},'%')
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from log_record
    where log_id = #{logId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.system.domain.LogRecord">
    insert into log_record (log_id, admin_id, admin_name, 
      admin_phone, log_time)
    values (#{logId,jdbcType=INTEGER}, #{adminId,jdbcType=INTEGER}, #{adminName,jdbcType=VARCHAR}, 
      #{adminPhone,jdbcType=VARCHAR}, #{logTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.system.domain.LogRecord">
    insert into log_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="logId != null">
        log_id,
      </if>
      <if test="adminId != null">
        admin_id,
      </if>
      <if test="adminName != null">
        admin_name,
      </if>
      <if test="adminPhone != null">
        admin_phone,
      </if>
      <if test="logTime != null">
        log_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="logId != null">
        #{logId,jdbcType=INTEGER},
      </if>
      <if test="adminId != null">
        #{adminId,jdbcType=INTEGER},
      </if>
      <if test="adminName != null">
        #{adminName,jdbcType=VARCHAR},
      </if>
      <if test="adminPhone != null">
        #{adminPhone,jdbcType=VARCHAR},
      </if>
      <if test="logTime != null">
        #{logTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.system.domain.LogRecord">
    update log_record
    <set>
      <if test="adminId != null">
        admin_id = #{adminId,jdbcType=INTEGER},
      </if>
      <if test="adminName != null">
        admin_name = #{adminName,jdbcType=VARCHAR},
      </if>
      <if test="adminPhone != null">
        admin_phone = #{adminPhone,jdbcType=VARCHAR},
      </if>
      <if test="logTime != null">
        log_time = #{logTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where log_id = #{logId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.system.domain.LogRecord">
    update log_record
    set admin_id = #{adminId,jdbcType=INTEGER},
      admin_name = #{adminName,jdbcType=VARCHAR},
      admin_phone = #{adminPhone,jdbcType=VARCHAR},
      log_time = #{logTime,jdbcType=TIMESTAMP}
    where log_id = #{logId,jdbcType=INTEGER}
  </update>
</mapper>